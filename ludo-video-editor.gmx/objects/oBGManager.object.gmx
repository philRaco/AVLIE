<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>plh_important</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///surface

bg_surface = surface_create(room_width,room_height);
bg = scene_bg.invalid;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///agnostic

mid_x = SCREEN_SIZE_X * 0.5;
mid_y = SCREEN_SIZE_Y * 0.5;
quarter_x = SCREEN_SIZE_X * 0.25;
quarter_y = SCREEN_SIZE_Y * 0.25;

var needed_vibes = 6;

for (var i = 0; i &lt; needed_vibes; ++i){
    vibes_x[i] = 0.2;
    vibes_y[i] = 0.2;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fire

/*
CHANGE OBJECT SO THAT IT HAS ITS OWN SURFACE AAAAAAAAHHHHHHHH
*/

timer = 0;
ampli_fire = 0.1;

timer_increase = 0.1;

fastertimer = 0.01;

timer_increase_cap = 0.6;
fastertimertimer = irandom_range(SECONDS * 6, SECONDS * 12);
ontheupsideoftimer = false;

fan_speed = SECONDS * 0.8; //faster would be like 2.35x
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///woah

debug_m = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fs!

if (bg == scene_bg.bg_fs){
    vibes_x[0] = (0.1+(abs(sin(ampli_fire*timer))*0.2))*vibes_x[1];
    timer += timer_increase;
    
    vibes_y[0] = battle_shift_y_sin_amplitude*sin(timer*0.01*battle_shift_y_sin_period);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fire!

if (bg == scene_bg.cst_tts){
    vibes_x[0] += (sin(ampli_fire*timer)^3)*1/SECONDS;
    vibes_x[1] += (sin(ampli_fire*timer)^3)*(sin(ampli_fire*timer))*1/SECONDS;
    vibes_x[2] -= (sin(ampli_fire*2*timer)^3)*1/SECONDS;
    vibes_x[3] += (sin(ampli_fire*timer)^3)*(sin(0.3*timer))*1/SECONDS;
    
    timer += timer_increase;
    
    //make it faster
    if fastertimertimer &gt; 0{
        fastertimertimer--;
    } else {
        if !ontheupsideoftimer{
            if timer_increase &gt; -timer_increase_cap{
                timer_increase -= fastertimer;
            } else {
                ontheupsideoftimer = true;
            }
        } else {
            if timer_increase &lt; 0.1{
                timer_increase += fastertimer * 2;
            } else {
                timer_increase = 0.1;
                fastertimertimer = irandom_range(SECONDS * 6, SECONDS * 12);
                ontheupsideoftimer = false;
            }
        }
    }
    
    //fans
    var current_state = 0;
    var fans_frame = 1;
    var fans_alpha_a = 2;
    var fans_alpha_b = 3;
    if !vibes_y[current_state]{
        if vibes_y[fans_frame] &lt; fan_speed{
            vibes_y[fans_frame]++;
        } else {
            vibes_y[current_state] = true;
        }
    } else {
        if vibes_y[fans_frame] &gt; 0{
            vibes_y[fans_frame]--;
        } else {
            vibes_y[current_state] = false;
        }
    }
    vibes_y[fans_alpha_a] = abs(vibes_y[fans_frame]/fan_speed);
    vibes_y[fans_alpha_b] = 1 - vibes_y[fans_alpha_a];
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lightfire!

if (bg == scene_bg.light_fire){
    vibes_x[0] = abs(sin(ampli_fire*timer))*0.3;
    vibes_x[1] += (sin(ampli_fire*timer)^3)*(sin(ampli_fire*timer))*1/SECONDS;
    vibes_x[2] -= (sin(ampli_fire*timer*(0.5))^3)*1/SECONDS;
    vibes_x[3] += (sin(ampli_fire*timer)^3)*(sin(0.3*timer))*1/SECONDS;
    
    timer += timer_increase;
    
    //make it faster
    if fastertimertimer &gt; 0{
        fastertimertimer--;
    } else {
        if !ontheupsideoftimer{
            if timer_increase &gt; -timer_increase_cap{
                timer_increase -= fastertimer;
            } else {
                ontheupsideoftimer = true;
            }
        } else {
            if timer_increase &lt; 0.1{
                timer_increase += fastertimer * 2;
            } else {
                timer_increase = 0.1;
                fastertimertimer = irandom_range(SECONDS * 6, SECONDS * 12);
                ontheupsideoftimer = false;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//debug

if keyboard_check_pressed(ord('9')){
    debug_m = !debug_m;
    if debug_m{
        instance_deactivate_all(true);
        //hide all the ground that was there before
        var curr_layer = -99;
        tile_layer_hide(-1000);
        repeat (4){
            tile_layer_hide(curr_layer);
            curr_layer--;
        }
    } else {
        instance_activate_all();
        //hide all the ground that was there before
        var curr_layer = -99;
        tile_layer_show(-1000);
        repeat (4){
            tile_layer_show(curr_layer);
            curr_layer--;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sstart surface

/*
if !surface_exists(bg_surface){
    bg_surface = surface_create(room_width,room_height);
}

surface_set_target(bg_surface);

draw_surface(bg_surface,0,0);

surface_reset_target();

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fs

if (bg == scene_bg.bg_fs){
    draw_set_alpha(vibes_x[0]);
    draw_background(
        bg_fs_bg,
        view_xview[0] - SCREEN_CENTER_X - mid_x,
        view_yview[0] - vibes_y[0] - SCREEN_CENTER_Y - mid_y
    );
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cst_tts

if (bg == scene_bg.cst_tts){
    //fans
    draw_background(bg_window_below,(view_xview[0]) + (quarter_x * 0.75),view_yview[0] + mid_y);
    /*
    var fans_alpha_a = 2;
    var fans_alpha_b = 3;
    draw_set_alpha(vibes_y[fans_alpha_a]);
        draw_background(bg_window,(view_xview[0]) + (quarter_x * 0.75),view_yview[0] + mid_y);
    draw_set_alpha(vibes_y[fans_alpha_b]); 
        draw_background(bg_window2,(view_xview[0]) + (quarter_x * 0.75),view_yview[0] + mid_y);
    draw_set_alpha(1);
    */
    //everything else
    draw_background(bg_fire_l2,view_xview[0]+vibes_x[2],view_yview[0]+vibes_x[2]);
    draw_background_tiled(bg_fire_l2,view_xview[0]+vibes_x[2],view_yview[0]+vibes_x[2]);
    draw_background_tiled(bg_fire_l1,view_xview[0]+vibes_x[0],view_yview[0]+vibes_x[0]);
    draw_background_tiled(bg_fire_no_rays,view_xview[0]+vibes_x[1]*2,view_yview[0]+vibes_x[1]*2);
    draw_background_tiled(bg_fire_l2n0,view_xview[0]+vibes_x[1],view_yview[0]+vibes_x[1]);
    draw_background_tiled(bg_fire_l2n1,view_xview[0]+vibes_x[1]+vibes_x[3],view_yview[0]+vibes_x[1]);
    draw_background_tiled(bg_fire_no_rays,view_xview[0]+vibes_x[2]*1.5,view_yview[0]+vibes_x[2]*1.5);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fire background

if (bg == scene_bg.light_fire){
    draw_background_tiled(bg_lightfire_l0,view_xview[0]+vibes_x[2]-mid_x,view_yview[0]+vibes_x[2]-mid_y);
    draw_set_alpha(1-(vibes_x[0]*2));
        draw_background(bg_lightfire_l1,(view_xview[0]) / 0.99 + quarter_x * 0.5,view_yview[0]);
    draw_set_alpha(1-vibes_x[0]);
        draw_background(bg_lightfire_l1b,(view_xview[0]) / 0.994 - quarter_x * 1.3,view_yview[0] - quarter_y * 1.3);
    draw_set_alpha(1);
    draw_background_tiled(bg_lightfire_l2a,view_xview[0]+(vibes_x[2]*1.5)+mid_x,view_yview[0]+(vibes_x[2]*1.5)+mid_y);
    draw_background_tiled(bg_lightfire_l2b,view_xview[0]+vibes_x[3],view_yview[0]+vibes_x[3]);
    draw_background_tiled(bg_lightfire_l2c,view_xview[0]+(vibes_x[1]*2)-mid_x,view_yview[0]+(vibes_x[1]*2)-mid_y);
    set_draw_reset();
}

/*
draw_background_tiled(bg_starss,(view_xview[0]) / 0.994,view_yview[0]+0);
draw_background_tiled(bg_rainn,view_xview[0]+vibes_x,view_yview[0]+vibes_y);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
